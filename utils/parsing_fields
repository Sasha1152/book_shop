Book
    title = models.CharField(max_length=50)
	description = models.TextField(blank=True)
	year = models.PositiveSmallIntegerField(max_length=4)
	pages = models.PositiveSmallIntegerField(max_length=5)
	price = models.DecimalField(max_digits=6, decimal_places=2, null=True, blank=True)
	quantity = models.PositiveSmallIntegerField(max_length=2, null=True, default=1)
	author = models.ForeignKey(Author, on_delete=models.CASCADE, null=True, blank=True)
	image = models.ForeignKey(Image, on_delete=models.CASCADE, null=True, blank=True)
	genre = models.ManyToManyField(Genre, null=True, blank=True, related_name='genre')

author
    first_name = models.CharField(max_length=64, blank=True)
	last_name = models.CharField(max_length=64, blank=True)
	biography = models.TextField(blank=True)
	image = models.ForeignKey(Image, on_delete=models.CASCADE, null=True, blank=True)

image
    image = models.ImageField(blank=True, upload_to='static/images')

genre
    name = models.CharField(max_length=64, blank=True)

order
    id = models.AutoField(primary_key=True)
	total_price = models.DecimalField(max_digits=6, decimal_places=2, null=True, blank=True)
	is_returned = models.BooleanField()
	user_id = models.ForeignKey(User, on_delete=models.CASCADE, null=True)

Suborder
	id = models.AutoField(primary_key=True)
	quantity = models.PositiveSmallIntegerField(max_length=2)
	is_returned = models.BooleanField(default=False)
	order_date = models.DateField(auto_now_add=True)
	book_id = models.ForeignKey(Book, on_delete=models.CASCADE, null=True)
	order_id = models.ForeignKey(Order, on_delete=models.CASCADE, null=True)

User
	first_name = models.CharField(max_length=64, blank=True)
	last_name = models.CharField(max_length=64, blank=True)
	email = models.EmailField()
	password = models.CharField(max_length=32)
	phone_number = models.CharField(blank=True, max_length=16)
	wallet = models.DecimalField(max_digits=6, decimal_places=2, default=0)
	image = models.ForeignKey(Image, on_delete=models.CASCADE, null=True, blank=True)
